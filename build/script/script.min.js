!function() {
    "use strict";
    function deleteTravelers(index) {
        if (index > 1) {
            var removedTraveler = document.querySelector("#traveler-" + index);
            area.removeChild(removedTraveler);
        }
    }
    function addTravelers(index) {
        var templateElement = document.querySelector("#traveler-template"), template = templateElement.innerHTML, html = Mustache.render(template, {
            number: index
        }), newTraveler = document.createElement("div");
        newTraveler.classList.add("traveler"), newTraveler.id = "traveler-" + index, newTraveler.innerHTML = html, 
        area.appendChild(newTraveler);
    }
    function changeTravelers(input, index, btnClass) {
        var parent = input.parentElement;
        parent.classList.contains("review__field-group--travelers") && ("btn--add" === btnClass && addTravelers(index), 
        "btn--reduce" === btnClass && deleteTravelers(index));
    }
    function units(input) {
        return input.dataset.units;
    }
    function maxValue(unit) {
        switch (unit) {
          case "чел.":
            return MAX_OF_TRAVELERS;

          case "дн.":
            return MAX_DAYS;

          default:
            return "";
        }
    }
    function reduce() {
        return function() {
            var parent = this.parentElement, input = parent.querySelector(".review__input"), oldValue = parseInt(input.value), newValue = oldValue - 1, count = 1 > newValue ? 1 : newValue;
            input.value = count + " " + units(input), changeTravelers(input, oldValue, "btn--reduce");
        };
    }
    function add() {
        return function() {
            var parent = this.parentElement, input = parent.querySelector(".review__input"), count = parseInt(input.value) + 1, max = maxValue(units(input));
            count = max > count ? count : max, input.value = count + " " + units(input), changeTravelers(input, count, "btn--add");
        };
    }
    for (var MAX_OF_TRAVELERS = 10, MAX_DAYS = 100, area = document.querySelector(".review-fldset--travelers"), reduceBtns = (document.querySelector("#traveler-template"), 
    document.getElementsByClassName("btn--reduce")), i = 0; i < reduceBtns.length; i++) reduceBtns[i].addEventListener("click", reduce());
    for (var addBtns = document.getElementsByClassName("btn--add"), i = 0; i < addBtns.length; i++) addBtns[i].addEventListener("click", add());
}(), function() {
    "use strict";
    function initialize() {
        var mapOptions = {
            zoom: 16,
            center: new google.maps.LatLng(59.9363137, 30.3206343)
        }, map = new google.maps.Map(document.getElementById("map-canvas"), mapOptions), image = "img/map-marker.svg", myLatLng = new google.maps.LatLng(59.9363137, 30.3206343);
        new google.maps.Marker({
            position: myLatLng,
            map: map,
            icon: image
        });
    }
    document.getElementById("map-canvas") && google.maps.event.addDomListener(window, "load", initialize);
}(), function() {
    "use strict";
    var pageNavToggle = document.querySelector(".page-nav__toggle");
    pageNavToggle.onclick = function(e) {
        e.preventDefault(), this.classList.toggle("page-nav__toggle--closed");
        var mainMenuWrapper = document.querySelector(".page-nav__wrapper");
        mainMenuWrapper.classList.toggle("page-nav__wrapper--closed");
        var mainMenu = document.querySelector(".main-menu");
        mainMenu.classList.toggle("main-menu--closed");
    };
}(), function() {
    function preview(file) {
        if (file.type.match(/image.*/)) {
            var reader = new FileReader();
            reader.addEventListener("load", function(event) {
                var html = Mustache.render(template, {
                    src: event.target.result,
                    "photo-name": file.name
                }), div = document.createElement("div");
                div.classList.add("recall-form__loaded-photo"), div.innerHTML = html, gallery.appendChild(div), 
                queue.push({
                    file: file,
                    div: div
                }), div.querySelector(".recall-form__delete-photo").addEventListener("click", function(event) {
                    event.preventDefault(), removePreview(div);
                });
            }), reader.readAsDataURL(file);
        }
    }
    function removePreview(div) {
        queue = queue.filter(function(element) {
            return element.div != div;
        }), div.parentNode.removeChild(div);
    }
    function request(data, fn) {
        var xhr = new XMLHttpRequest(), time = new Date().getTime();
        xhr.open("post", "https://echo.htmlacademy.ru/adaptive?" + time), xhr.addEventListener("readystatechange", function() {
            4 == xhr.readyState && fn(xhr.responseText);
        }), xhr.send(data);
    }
    if ("FormData" in window) {
        var form = document.querySelector(".recall-form");
        if (form) {
            var queue = [], template = document.querySelector("#photo-template").innerHTML;
            if ("FileReader" in window) {
                var gallery = document.querySelector(".recall-form__gallery");
                form.querySelector("#upload-photo").addEventListener("change", function() {
                    for (var files = this.files, i = 0; i < files.length; i++) preview(files[i]);
                    this.value = "";
                });
            }
            form.addEventListener("submit", function(event) {
                event.preventDefault();
                var data = new FormData(form);
                queue.forEach(function(element) {
                    data.append("images", element.file);
                }), request(data, function(response) {
                    console.log(response);
                });
            });
        }
    }
}();